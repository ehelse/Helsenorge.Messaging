//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Helsenorge.Registries.AddressService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationPartySearch", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class CommunicationPartySearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] SearchConstraintsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int Page {
            get {
                return this.PageField;
            }
            set {
                if ((this.PageField.Equals(value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.Generic.KeyValuePair<string, string>[] SearchConstraints {
            get {
                return this.SearchConstraintsField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchConstraintsField, value) != true)) {
                    this.SearchConstraintsField = value;
                    this.RaisePropertyChanged("SearchConstraints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResult", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class SearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.SearchFacet[] FacetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.CommunicationParty[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServerTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.SearchFacet[] Facets {
            get {
                return this.FacetsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacetsField, value) != true)) {
                    this.FacetsField = value;
                    this.RaisePropertyChanged("Facets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.CommunicationParty[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ServerTime {
            get {
                return this.ServerTimeField;
            }
            set {
                if ((this.ServerTimeField.Equals(value) != true)) {
                    this.ServerTimeField = value;
                    this.RaisePropertyChanged("ServerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int TotalResults {
            get {
                return this.TotalResultsField;
            }
            set {
                if ((this.TotalResultsField.Equals(value) != true)) {
                    this.TotalResultsField = value;
                    this.RaisePropertyChanged("TotalResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchFacet", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class SearchFacet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.SearchResultFacetEntry[] EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.SearchResultFacetEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationParty", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Helsenorge.Registries.AddressService.Organization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Helsenorge.Registries.AddressService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Helsenorge.Registries.AddressService.OrganizationPerson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Helsenorge.Registries.AddressService.Service))]
    internal partial class CommunicationParty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code CoverageAreaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidCommunicationPartyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code MunicipalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code ParentBusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentHerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentOrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServerTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.CommunicationPartyType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code CoverageAreaType {
            get {
                return this.CoverageAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageAreaTypeField, value) != true)) {
                    this.CoverageAreaTypeField = value;
                    this.RaisePropertyChanged("CoverageAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool IsValidCommunicationParty {
            get {
                return this.IsValidCommunicationPartyField;
            }
            set {
                if ((this.IsValidCommunicationPartyField.Equals(value) != true)) {
                    this.IsValidCommunicationPartyField = value;
                    this.RaisePropertyChanged("IsValidCommunicationParty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Municipality {
            get {
                return this.MunicipalityField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityField, value) != true)) {
                    this.MunicipalityField = value;
                    this.RaisePropertyChanged("Municipality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code ParentBusinessType {
            get {
                return this.ParentBusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentBusinessTypeField, value) != true)) {
                    this.ParentBusinessTypeField = value;
                    this.RaisePropertyChanged("ParentBusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ParentHerId {
            get {
                return this.ParentHerIdField;
            }
            set {
                if ((this.ParentHerIdField.Equals(value) != true)) {
                    this.ParentHerIdField = value;
                    this.RaisePropertyChanged("ParentHerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ParentOrganizationNumber {
            get {
                return this.ParentOrganizationNumberField;
            }
            set {
                if ((this.ParentOrganizationNumberField.Equals(value) != true)) {
                    this.ParentOrganizationNumberField = value;
                    this.RaisePropertyChanged("ParentOrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ServerTime {
            get {
                return this.ServerTimeField;
            }
            set {
                if ((this.ServerTimeField.Equals(value) != true)) {
                    this.ServerTimeField = value;
                    this.RaisePropertyChanged("ServerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.CommunicationPartyType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultFacetEntry", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class SearchResultFacetEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int Hits {
            get {
                return this.HitsField;
            }
            set {
                if ((this.HitsField.Equals(value) != true)) {
                    this.HitsField = value;
                    this.RaisePropertyChanged("Hits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Code", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class Code : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SimpleTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeText {
            get {
                return this.CodeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTextField, value) != true)) {
                    this.CodeTextField = value;
                    this.RaisePropertyChanged("CodeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int OID {
            get {
                return this.OIDField;
            }
            set {
                if ((this.OIDField.Equals(value) != true)) {
                    this.OIDField = value;
                    this.RaisePropertyChanged("OID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SimpleType {
            get {
                return this.SimpleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SimpleTypeField, value) != true)) {
                    this.SimpleTypeField = value;
                    this.RaisePropertyChanged("SimpleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Period", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class Period : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class Organization : Helsenorge.Registries.AddressService.CommunicationParty {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Department[] DepartmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] IndustryCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.OrganizationPerson[] PeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Service[] ServicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Department[] Departments {
            get {
                return this.DepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentsField, value) != true)) {
                    this.DepartmentsField = value;
                    this.RaisePropertyChanged("Departments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] IndustryCodes {
            get {
                return this.IndustryCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryCodesField, value) != true)) {
                    this.IndustryCodesField = value;
                    this.RaisePropertyChanged("IndustryCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int OrganizationNumber {
            get {
                return this.OrganizationNumberField;
            }
            set {
                if ((this.OrganizationNumberField.Equals(value) != true)) {
                    this.OrganizationNumberField = value;
                    this.RaisePropertyChanged("OrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.OrganizationPerson[] People {
            get {
                return this.PeopleField;
            }
            set {
                if ((object.ReferenceEquals(this.PeopleField, value) != true)) {
                    this.PeopleField = value;
                    this.RaisePropertyChanged("People");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Service[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class Department : Helsenorge.Registries.AddressService.CommunicationParty {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] IndustryCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.OrganizationPerson[] PeopleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] IndustryCodes {
            get {
                return this.IndustryCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryCodesField, value) != true)) {
                    this.IndustryCodesField = value;
                    this.RaisePropertyChanged("IndustryCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.OrganizationPerson[] People {
            get {
                return this.PeopleField;
            }
            set {
                if ((object.ReferenceEquals(this.PeopleField, value) != true)) {
                    this.PeopleField = value;
                    this.RaisePropertyChanged("People");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationPerson", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class OrganizationPerson : Helsenorge.Registries.AddressService.CommunicationParty {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Department[] DepartmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Organization[] OrganizationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Department[] Departments {
            get {
                return this.DepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentsField, value) != true)) {
                    this.DepartmentsField = value;
                    this.RaisePropertyChanged("Departments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Organization[] Organizations {
            get {
                return this.OrganizationsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationsField, value) != true)) {
                    this.OrganizationsField = value;
                    this.RaisePropertyChanged("Organizations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class Service : Helsenorge.Registries.AddressService.CommunicationParty {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.CoverageInfo[] CoverageAreasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.CoverageInfo[] CoverageAreas {
            get {
                return this.CoverageAreasField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageAreasField, value) != true)) {
                    this.CoverageAreasField = value;
                    this.RaisePropertyChanged("CoverageAreas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectronicAddress", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class ElectronicAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InheritedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Inherited {
            get {
                return this.InheritedField;
            }
            set {
                if ((this.InheritedField.Equals(value) != true)) {
                    this.InheritedField = value;
                    this.RaisePropertyChanged("Inherited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TypeCodeValue {
            get {
                return this.TypeCodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeValueField, value) != true)) {
                    this.TypeCodeValueField = value;
                    this.RaisePropertyChanged("TypeCodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalAddress", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class PhysicalAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InheritedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostboxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Inherited {
            get {
                return this.InheritedField;
            }
            set {
                if ((this.InheritedField.Equals(value) != true)) {
                    this.InheritedField = value;
                    this.RaisePropertyChanged("Inherited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((this.PostalCodeField.Equals(value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Postbox {
            get {
                return this.PostboxField;
            }
            set {
                if ((object.ReferenceEquals(this.PostboxField, value) != true)) {
                    this.PostboxField = value;
                    this.RaisePropertyChanged("Postbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TypeCodeValue {
            get {
                return this.TypeCodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeValueField, value) != true)) {
                    this.TypeCodeValueField = value;
                    this.RaisePropertyChanged("TypeCodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationPartyType", Namespace="http://register.nhn.no/CommunicationParty")]
    internal enum CommunicationPartyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Person = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Organization = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Department = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://register.nhn.no/HPR")]
    [System.SerializableAttribute()]
    internal partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.CitizenId CitizenIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.HPRInformation HPRInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.CitizenId CitizenId {
            get {
                return this.CitizenIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CitizenIdField, value) != true)) {
                    this.CitizenIdField = value;
                    this.RaisePropertyChanged("CitizenId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.HPRInformation HPRInformation {
            get {
                return this.HPRInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.HPRInformationField, value) != true)) {
                    this.HPRInformationField = value;
                    this.RaisePropertyChanged("HPRInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CitizenId", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class CitizenId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.CitizenIdType CitizenIdTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.CitizenIdType CitizenIdType {
            get {
                return this.CitizenIdTypeField;
            }
            set {
                if ((this.CitizenIdTypeField.Equals(value) != true)) {
                    this.CitizenIdTypeField = value;
                    this.RaisePropertyChanged("CitizenIdType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HPRInformation", Namespace="http://register.nhn.no/HPR")]
    [System.SerializableAttribute()]
    internal partial class HPRInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Authorization[] AuthorizationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HPRNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.SpecialCompetence[] SpecialCompetencesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Authorization[] Authorizations {
            get {
                return this.AuthorizationsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationsField, value) != true)) {
                    this.AuthorizationsField = value;
                    this.RaisePropertyChanged("Authorizations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HPRNo {
            get {
                return this.HPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HPRNoField, value) != true)) {
                    this.HPRNoField = value;
                    this.RaisePropertyChanged("HPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HPRNumber {
            get {
                return this.HPRNumberField;
            }
            set {
                if ((this.HPRNumberField.Equals(value) != true)) {
                    this.HPRNumberField = value;
                    this.RaisePropertyChanged("HPRNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.SpecialCompetence[] SpecialCompetences {
            get {
                return this.SpecialCompetencesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialCompetencesField, value) != true)) {
                    this.SpecialCompetencesField = value;
                    this.RaisePropertyChanged("SpecialCompetences");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CitizenIdType", Namespace="http://register.nhn.no/Common")]
    internal enum CitizenIdType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DN = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HN = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FHN = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authorization", Namespace="http://register.nhn.no/HPR")]
    [System.SerializableAttribute()]
    internal partial class Authorization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code ProfessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Requisition RequisitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Speciality[] SpecialitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Profession {
            get {
                return this.ProfessionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionField, value) != true)) {
                    this.ProfessionField = value;
                    this.RaisePropertyChanged("Profession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Requisition Requisition {
            get {
                return this.RequisitionField;
            }
            set {
                if ((object.ReferenceEquals(this.RequisitionField, value) != true)) {
                    this.RequisitionField = value;
                    this.RaisePropertyChanged("Requisition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Speciality[] Specialities {
            get {
                return this.SpecialitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialitiesField, value) != true)) {
                    this.SpecialitiesField = value;
                    this.RaisePropertyChanged("Specialities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpecialCompetence", Namespace="http://register.nhn.no/HPR")]
    [System.SerializableAttribute()]
    internal partial class SpecialCompetence : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Requisition", Namespace="http://register.nhn.no/HPR")]
    [System.SerializableAttribute()]
    internal partial class Requisition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Speciality", Namespace="http://register.nhn.no/HPR")]
    [System.SerializableAttribute()]
    internal partial class Speciality : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageInfo", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class CoverageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int OrganizationNumber {
            get {
                return this.OrganizationNumberField;
            }
            set {
                if ((this.OrganizationNumberField.Equals(value) != true)) {
                    this.OrganizationNumberField = value;
                    this.RaisePropertyChanged("OrganizationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericFault", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class GenericFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationPersonUpdate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class OrganizationPersonUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ProfessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SpecialitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] Professions {
            get {
                return this.ProfessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionsField, value) != true)) {
                    this.ProfessionsField = value;
                    this.RaisePropertyChanged("Professions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] Specialities {
            get {
                return this.SpecialitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialitiesField, value) != true)) {
                    this.SpecialitiesField = value;
                    this.RaisePropertyChanged("Specialities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class ValidationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ValidationError[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ValidationError[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationError", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class ValidationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceUpdate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class ServiceUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationUpdate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class OrganizationUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentUpdate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class DepartmentUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentHerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ParentHerId {
            get {
                return this.ParentHerIdField;
            }
            set {
                if ((this.ParentHerIdField.Equals(value) != true)) {
                    this.ParentHerIdField = value;
                    this.RaisePropertyChanged("ParentHerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationPersonCreate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class OrganizationPersonCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HprNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentHerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ProfessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SpecialitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HprNumber {
            get {
                return this.HprNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HprNumberField, value) != true)) {
                    this.HprNumberField = value;
                    this.RaisePropertyChanged("HprNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ParentHerId {
            get {
                return this.ParentHerIdField;
            }
            set {
                if ((this.ParentHerIdField.Equals(value) != true)) {
                    this.ParentHerIdField = value;
                    this.RaisePropertyChanged("ParentHerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] Professions {
            get {
                return this.ProfessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionsField, value) != true)) {
                    this.ProfessionsField = value;
                    this.RaisePropertyChanged("Professions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] Specialities {
            get {
                return this.SpecialitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialitiesField, value) != true)) {
                    this.SpecialitiesField = value;
                    this.RaisePropertyChanged("Specialities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCreate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class ServiceCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentHerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code ServiceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ParentHerId {
            get {
                return this.ParentHerIdField;
            }
            set {
                if ((this.ParentHerIdField.Equals(value) != true)) {
                    this.ParentHerIdField = value;
                    this.RaisePropertyChanged("ParentHerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code ServiceCode {
            get {
                return this.ServiceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCodeField, value) != true)) {
                    this.ServiceCodeField = value;
                    this.RaisePropertyChanged("ServiceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationCreate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class OrganizationCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int OrganizationNumber {
            get {
                return this.OrganizationNumberField;
            }
            set {
                if ((this.OrganizationNumberField.Equals(value) != true)) {
                    this.OrganizationNumberField = value;
                    this.RaisePropertyChanged("OrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentCreate", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class DepartmentCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Code BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentHerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Code BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ParentHerId {
            get {
                return this.ParentHerIdField;
            }
            set {
                if ((this.ParentHerIdField.Equals(value) != true)) {
                    this.ParentHerIdField = value;
                    this.RaisePropertyChanged("ParentHerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityLogEntry", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class EntityLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.EntityLogEntryData[] ChangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ByUser {
            get {
                return this.ByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ByUserField, value) != true)) {
                    this.ByUserField = value;
                    this.RaisePropertyChanged("ByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.EntityLogEntryData[] Changes {
            get {
                return this.ChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangesField, value) != true)) {
                    this.ChangesField = value;
                    this.RaisePropertyChanged("Changes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityLogEntryData", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class EntityLogEntryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string OldValue {
            get {
                return this.OldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.OldValueField, value) != true)) {
                    this.OldValueField = value;
                    this.RaisePropertyChanged("OldValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationPartyStatistics", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class CommunicationPartyStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.BusinessTypeStatistics[] BusinessTypeStatisticsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.BusinessTypeStatistics[] BusinessTypeStatistics {
            get {
                return this.BusinessTypeStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeStatisticsField, value) != true)) {
                    this.BusinessTypeStatisticsField = value;
                    this.RaisePropertyChanged("BusinessTypeStatistics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessTypeStatistics", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class BusinessTypeStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfUnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int NumberOfPersons {
            get {
                return this.NumberOfPersonsField;
            }
            set {
                if ((this.NumberOfPersonsField.Equals(value) != true)) {
                    this.NumberOfPersonsField = value;
                    this.RaisePropertyChanged("NumberOfPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int NumberOfServices {
            get {
                return this.NumberOfServicesField;
            }
            set {
                if ((this.NumberOfServicesField.Equals(value) != true)) {
                    this.NumberOfServicesField = value;
                    this.RaisePropertyChanged("NumberOfServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int NumberOfUnits {
            get {
                return this.NumberOfUnitsField;
            }
            set {
                if ((this.NumberOfUnitsField.Equals(value) != true)) {
                    this.NumberOfUnitsField = value;
                    this.RaisePropertyChanged("NumberOfUnits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationUpdateStatistics", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class OrganizationUpdateStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.UpdateStatistic[] StatisticsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.UpdateStatistic[] Statistics {
            get {
                return this.StatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatisticsField, value) != true)) {
                    this.StatisticsField = value;
                    this.RaisePropertyChanged("Statistics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateStatistic", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    internal partial class UpdateStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CertificateDetails", Namespace="http://register.nhn.no/CertificateDetails")]
    [System.SerializableAttribute()]
    internal partial class CertificateDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LdapUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] Certificate {
            get {
                return this.CertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateField, value) != true)) {
                    this.CertificateField = value;
                    this.RaisePropertyChanged("Certificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LdapUrl {
            get {
                return this.LdapUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.LdapUrlField, value) != true)) {
                    this.LdapUrlField = value;
                    this.RaisePropertyChanged("LdapUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CertificateSearchResult", Namespace="http://register.nhn.no/CertificateSearchResult")]
    [System.SerializableAttribute()]
    internal partial class CertificateSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActualLdapUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.AddressService.CertificateCandidate[] MatchingCertificatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ActualLdapUrl {
            get {
                return this.ActualLdapUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualLdapUrlField, value) != true)) {
                    this.ActualLdapUrlField = value;
                    this.RaisePropertyChanged("ActualLdapUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.AddressService.CertificateCandidate[] MatchingCertificates {
            get {
                return this.MatchingCertificatesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingCertificatesField, value) != true)) {
                    this.MatchingCertificatesField = value;
                    this.RaisePropertyChanged("MatchingCertificates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CertificateCandidate", Namespace="http://register.nhn.no/CertificateSearchResult")]
    [System.SerializableAttribute()]
    internal partial class CertificateCandidate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset NotAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset NotBeforeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidForEncryptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidForSigningField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CertificateSerialNumber {
            get {
                return this.CertificateSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateSerialNumberField, value) != true)) {
                    this.CertificateSerialNumberField = value;
                    this.RaisePropertyChanged("CertificateSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CnName {
            get {
                return this.CnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CnNameField, value) != true)) {
                    this.CnNameField = value;
                    this.RaisePropertyChanged("CnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTimeOffset NotAfter {
            get {
                return this.NotAfterField;
            }
            set {
                if ((this.NotAfterField.Equals(value) != true)) {
                    this.NotAfterField = value;
                    this.RaisePropertyChanged("NotAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTimeOffset NotBefore {
            get {
                return this.NotBeforeField;
            }
            set {
                if ((this.NotBeforeField.Equals(value) != true)) {
                    this.NotBeforeField = value;
                    this.RaisePropertyChanged("NotBefore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool ValidForEncryption {
            get {
                return this.ValidForEncryptionField;
            }
            set {
                if ((this.ValidForEncryptionField.Equals(value) != true)) {
                    this.ValidForEncryptionField = value;
                    this.RaisePropertyChanged("ValidForEncryption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool ValidForSigning {
            get {
                return this.ValidForSigningField;
            }
            set {
                if ((this.ValidForSigningField.Equals(value) != true)) {
                    this.ValidForSigningField = value;
                    this.RaisePropertyChanged("ValidForSigning");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LdapSearchProvider", Namespace="http://register.nhn.no/CertificateSearchResult")]
    [System.SerializableAttribute()]
    internal partial class LdapSearchProvider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistinguishedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string BaseUrl {
            get {
                return this.BaseUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUrlField, value) != true)) {
                    this.BaseUrlField = value;
                    this.RaisePropertyChanged("BaseUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DistinguishedName {
            get {
                return this.DistinguishedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistinguishedNameField, value) != true)) {
                    this.DistinguishedNameField = value;
                    this.RaisePropertyChanged("DistinguishedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://register.nhn.no/CommunicationParty", ConfigurationName="AddressService.ICommunicationPartyService")]
    internal interface ICommunicationPartyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/Ping", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/PingResponse" +
            "")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/Ping", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/PingResponse" +
            "")]
        System.Threading.Tasks.Task<string> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/Search", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchGeneri" +
            "cFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.SearchResult Search([System.ServiceModel.MessageParameterAttribute(Name="search")] Helsenorge.Registries.AddressService.CommunicationPartySearch search1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/Search", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchRespon" +
            "se")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.SearchResult> SearchAsync(Helsenorge.Registries.AddressService.CommunicationPartySearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchById", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchByIdRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchByIdGe" +
            "nericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CommunicationParty[] SearchById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchById", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchByIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CommunicationParty[]> SearchByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CommunicationParty GetCommunicationPartyDetails(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyDetailsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CommunicationParty> GetCommunicationPartyDetailsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Organization GetOrganizationDetails(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionDetailsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization> GetOrganizationDetailsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetDepartmen" +
            "tDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetDepartmen" +
            "tDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetDepartmen" +
            "tDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Department GetDepartmentDetails(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetDepartmen" +
            "tDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetDepartmen" +
            "tDetailsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Department> GetDepartmentDetailsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetServiceDe" +
            "tails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetServiceDe" +
            "tailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetServiceDe" +
            "tailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Service GetServiceDetails(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetServiceDe" +
            "tails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetServiceDe" +
            "tailsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Service> GetServiceDetailsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionPersonDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionPersonDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionPersonDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.OrganizationPerson GetOrganizationPersonDetails(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionPersonDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionPersonDetailsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.OrganizationPerson> GetOrganizationPersonDetailsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsHavingCode", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsHavingCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsHavingCodeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Organization[] GetOrganizationsHavingCode(Helsenorge.Registries.AddressService.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsHavingCode", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsHavingCodeResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetOrganizationsHavingCodeAsync(Helsenorge.Registries.AddressService.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSChildOrganizations", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSChildOrganizationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSChildOrganizationsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Organization[] GetAssosiatedIKSChildOrganizations(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSChildOrganizations", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSChildOrganizationsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetAssosiatedIKSChildOrganizationsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSParentOrganizations", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSParentOrganizationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSParentOrganizationsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Organization[] GetAssosiatedIKSParentOrganizations(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSParentOrganizations", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAssosiate" +
            "dIKSParentOrganizationsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetAssosiatedIKSParentOrganizationsAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationPersonDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationPersonDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationPersonDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationPersonDetailsValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateOrganizationPersonDetails(Helsenorge.Registries.AddressService.OrganizationPersonUpdate p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationPersonDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationPersonDetailsResponse")]
        System.Threading.Tasks.Task UpdateOrganizationPersonDetailsAsync(Helsenorge.Registries.AddressService.OrganizationPersonUpdate p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServic" +
            "eDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServic" +
            "eDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServic" +
            "eDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServic" +
            "eDetailsValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateServiceDetails(Helsenorge.Registries.AddressService.ServiceUpdate t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServic" +
            "eDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServic" +
            "eDetailsResponse")]
        System.Threading.Tasks.Task UpdateServiceDetailsAsync(Helsenorge.Registries.AddressService.ServiceUpdate t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationDetailsValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateOrganizationDetails(Helsenorge.Registries.AddressService.OrganizationUpdate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationDetailsResponse")]
        System.Threading.Tasks.Task UpdateOrganizationDetailsAsync(Helsenorge.Registries.AddressService.OrganizationUpdate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepart" +
            "mentDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepart" +
            "mentDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepart" +
            "mentDetailsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepart" +
            "mentDetailsValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateDepartmentDetails(Helsenorge.Registries.AddressService.DepartmentUpdate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepart" +
            "mentDetails", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepart" +
            "mentDetailsResponse")]
        System.Threading.Tasks.Task UpdateDepartmentDetailsAsync(Helsenorge.Registries.AddressService.DepartmentUpdate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationIKSAssociations", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationIKSAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationIKSAssociationsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationIKSAssociationsValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateOrganizationIKSAssociations(int organizaitonHerId, int[] herIdsForAssociatedIKS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationIKSAssociations", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrgani" +
            "zationIKSAssociationsResponse")]
        System.Threading.Tasks.Task UpdateOrganizationIKSAssociationsAsync(int organizaitonHerId, int[] herIdsForAssociatedIKS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationPerson", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationPersonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationPersonGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationPersonValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.OrganizationPerson CreateOrganizationPerson(Helsenorge.Registries.AddressService.OrganizationPersonCreate p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationPerson", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationPersonResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.OrganizationPerson> CreateOrganizationPersonAsync(Helsenorge.Registries.AddressService.OrganizationPersonCreate p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateServic" +
            "e", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateServic" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateServic" +
            "eGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateServic" +
            "eValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Service CreateService(Helsenorge.Registries.AddressService.ServiceCreate t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateServic" +
            "e", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateServic" +
            "eResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Service> CreateServiceAsync(Helsenorge.Registries.AddressService.ServiceCreate t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zation", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Organization CreateOrganization(Helsenorge.Registries.AddressService.OrganizationCreate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zation", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrgani" +
            "zationResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization> CreateOrganizationAsync(Helsenorge.Registries.AddressService.OrganizationCreate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepart" +
            "ment", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepart" +
            "mentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepart" +
            "mentGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepart" +
            "mentValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Department CreateDepartment(Helsenorge.Registries.AddressService.DepartmentCreate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepart" +
            "ment", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepart" +
            "mentResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Department> CreateDepartmentAsync(Helsenorge.Registries.AddressService.DepartmentCreate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetChangeLog" +
            "", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetChangeLog" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetChangeLog" +
            "GenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.EntityLogEntry[] GetChangeLog(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetChangeLog" +
            "", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetChangeLog" +
            "Response")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.EntityLogEntry[]> GetChangeLogAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyStatistics", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyStatisticsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CommunicationPartyStatistics GetCommunicationPartyStatistics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyStatistics", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunica" +
            "tionPartyStatisticsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CommunicationPartyStatistics> GetCommunicationPartyStatisticsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionUpdateStatistics", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionUpdateStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionUpdateStatisticsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.OrganizationUpdateStatistics GetOrganizationUpdateStatistics(System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionUpdateStatistics", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionUpdateStatisticsResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.OrganizationUpdateStatistics> GetOrganizationUpdateStatisticsAsync(System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsOwnedBy", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsOwnedByResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsOwnedByGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Organization[] GetOrganizationsOwnedBy(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsOwnedBy", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizat" +
            "ionsOwnedByResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetOrganizationsOwnedByAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/EnableTransp" +
            "ortOnOrganization", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/EnableTransp" +
            "ortOnOrganizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/EnableTransp" +
            "ortOnOrganizationGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        void EnableTransportOnOrganization(int herId, string transportType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/EnableTransp" +
            "ortOnOrganization", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/EnableTransp" +
            "ortOnOrganizationResponse")]
        System.Threading.Tasks.Task EnableTransportOnOrganizationAsync(int herId, string transportType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunica" +
            "tionPartyValid", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunica" +
            "tionPartyValidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunica" +
            "tionPartyValidGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunica" +
            "tionPartyValidValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void SetCommunicationPartyValid(int herId, Helsenorge.Registries.AddressService.Period period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunica" +
            "tionPartyValid", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunica" +
            "tionPartyValidResponse")]
        System.Threading.Tasks.Task SetCommunicationPartyValidAsync(int herId, Helsenorge.Registries.AddressService.Period period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryption", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificateForEncryption(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryption", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateForEncryptionAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignature", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificateForValidatingSignature(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignature", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateForValidatingSignatureAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionByOrganizationNumber", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionByOrganizationNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionByOrganizationNumberGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionByOrganizationNumberValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificateForEncryptionByOrganizationNumber(int organizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionByOrganizationNumber", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionByOrganizationNumberResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateForEncryptionByOrganizationNumberAsync(int organizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureByOrganizationNumber", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureByOrganizationNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureByOrganizationNumberGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureByOrganizationNumberValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificateForValidatingSignatureByOrganizationNumber(int organizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureByOrganizationNumber", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureByOrganizationNumberResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateForValidatingSignatureByOrganizationNumberAsync(int organizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "te", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificate(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "te", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateAsync(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionLdap", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionLdapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionLdapGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionLdapValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificateForEncryptionLdap(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionLdap", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForEncryptionLdapResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateForEncryptionLdapAsync(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureLdap", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureLdapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureLdapGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureLdapValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        byte[] GetCertificateForValidatingSignatureLdap(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureLdap", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teForValidatingSignatureLdapResponse")]
        System.Threading.Tasks.Task<byte[]> GetCertificateForValidatingSignatureLdapAsync(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForEncryption", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForEncryptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForEncryptionGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForEncryptionValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CertificateDetails GetCertificateDetailsForEncryption(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForEncryption", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForEncryptionResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails> GetCertificateDetailsForEncryptionAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForValidatingSignature", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForValidatingSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForValidatingSignatureGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForValidatingSignatureValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CertificateDetails GetCertificateDetailsForValidatingSignature(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForValidatingSignature", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertifica" +
            "teDetailsForValidatingSignatureResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails> GetCertificateDetailsForValidatingSignatureAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForEncryption", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForEncryptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForEncryptionGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForEncryptionValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CertificateDetails[] SearchCertificatesForEncryption(string sn, string cn, string ou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForEncryption", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForEncryptionResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails[]> SearchCertificatesForEncryptionAsync(string sn, string cn, string ou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForValidatingSignature", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForValidatingSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForValidatingSignatureGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForValidatingSignatureValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CertificateDetails[] SearchCertificatesForValidatingSignature(string sn, string cn, string ou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForValidatingSignature", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesForValidatingSignatureResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails[]> SearchCertificatesForValidatingSignatureAsync(string sn, string cn, string ou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesByLdapUrl", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesByLdapUrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesByLdapUrlGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesByLdapUrlValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.CertificateSearchResult SearchCertificatesByLdapUrl(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesByLdapUrl", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertif" +
            "icatesByLdapUrlResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateSearchResult> SearchCertificatesByLdapUrlAsync(string ldapUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetLdapSearc" +
            "hProviders", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetLdapSearc" +
            "hProvidersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetLdapSearc" +
            "hProvidersGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.ValidationFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetLdapSearc" +
            "hProvidersValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.LdapSearchProvider[] GetLdapSearchProviders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetLdapSearc" +
            "hProviders", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetLdapSearc" +
            "hProvidersResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.LdapSearchProvider[]> GetLdapSearchProvidersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAllHFComm" +
            "partiesCsv", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAllHFComm" +
            "partiesCsvResponse")]
        string GetAllHFCommpartiesCsv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAllHFComm" +
            "partiesCsv", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetAllHFComm" +
            "partiesCsvResponse")]
        System.Threading.Tasks.Task<string> GetAllHFCommpartiesCsvAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/AddCustomAtt" +
            "ribute", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/AddCustomAtt" +
            "ributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/AddCustomAtt" +
            "ributeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.AddressService.Code AddCustomAttribute(int herId, Helsenorge.Registries.AddressService.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/AddCustomAtt" +
            "ribute", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/AddCustomAtt" +
            "ributeResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Code> AddCustomAttributeAsync(int herId, Helsenorge.Registries.AddressService.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/RemoveCustom" +
            "Attribute", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/RemoveCustom" +
            "AttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.AddressService.GenericFault), Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/RemoveCustom" +
            "AttributeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        void RemoveCustomAttribute(int herId, Helsenorge.Registries.AddressService.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/RemoveCustom" +
            "Attribute", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/RemoveCustom" +
            "AttributeResponse")]
        System.Threading.Tasks.Task RemoveCustomAttributeAsync(int herId, Helsenorge.Registries.AddressService.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCustomAtt" +
            "ributes", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCustomAtt" +
            "ributesResponse")]
        System.Collections.Generic.KeyValuePair<int, Helsenorge.Registries.AddressService.Code[]>[] GetCustomAttributes(int[] herIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCustomAtt" +
            "ributes", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCustomAtt" +
            "ributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, Helsenorge.Registries.AddressService.Code[]>[]> GetCustomAttributesAsync(int[] herIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateCovera" +
            "geAreas", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateCovera" +
            "geAreasResponse")]
        void UpdateCoverageAreas(int herId, Helsenorge.Registries.AddressService.CoverageInfo[] coverageAreas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateCovera" +
            "geAreas", ReplyAction="http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateCovera" +
            "geAreasResponse")]
        System.Threading.Tasks.Task UpdateCoverageAreasAsync(int herId, Helsenorge.Registries.AddressService.CoverageInfo[] coverageAreas);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICommunicationPartyServiceChannel : Helsenorge.Registries.AddressService.ICommunicationPartyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class CommunicationPartyServiceClient : System.ServiceModel.ClientBase<Helsenorge.Registries.AddressService.ICommunicationPartyService>, Helsenorge.Registries.AddressService.ICommunicationPartyService {
        
        public CommunicationPartyServiceClient() {
        }
        
        public CommunicationPartyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommunicationPartyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationPartyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationPartyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<string> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public Helsenorge.Registries.AddressService.SearchResult Search(Helsenorge.Registries.AddressService.CommunicationPartySearch search1) {
            return base.Channel.Search(search1);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.SearchResult> SearchAsync(Helsenorge.Registries.AddressService.CommunicationPartySearch search) {
            return base.Channel.SearchAsync(search);
        }
        
        public Helsenorge.Registries.AddressService.CommunicationParty[] SearchById(string id) {
            return base.Channel.SearchById(id);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CommunicationParty[]> SearchByIdAsync(string id) {
            return base.Channel.SearchByIdAsync(id);
        }
        
        public Helsenorge.Registries.AddressService.CommunicationParty GetCommunicationPartyDetails(int herId) {
            return base.Channel.GetCommunicationPartyDetails(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CommunicationParty> GetCommunicationPartyDetailsAsync(int herId) {
            return base.Channel.GetCommunicationPartyDetailsAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.Organization GetOrganizationDetails(int herId) {
            return base.Channel.GetOrganizationDetails(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization> GetOrganizationDetailsAsync(int herId) {
            return base.Channel.GetOrganizationDetailsAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.Department GetDepartmentDetails(int herId) {
            return base.Channel.GetDepartmentDetails(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Department> GetDepartmentDetailsAsync(int herId) {
            return base.Channel.GetDepartmentDetailsAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.Service GetServiceDetails(int herId) {
            return base.Channel.GetServiceDetails(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Service> GetServiceDetailsAsync(int herId) {
            return base.Channel.GetServiceDetailsAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.OrganizationPerson GetOrganizationPersonDetails(int herId) {
            return base.Channel.GetOrganizationPersonDetails(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.OrganizationPerson> GetOrganizationPersonDetailsAsync(int herId) {
            return base.Channel.GetOrganizationPersonDetailsAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.Organization[] GetOrganizationsHavingCode(Helsenorge.Registries.AddressService.Code code) {
            return base.Channel.GetOrganizationsHavingCode(code);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetOrganizationsHavingCodeAsync(Helsenorge.Registries.AddressService.Code code) {
            return base.Channel.GetOrganizationsHavingCodeAsync(code);
        }
        
        public Helsenorge.Registries.AddressService.Organization[] GetAssosiatedIKSChildOrganizations(int herId) {
            return base.Channel.GetAssosiatedIKSChildOrganizations(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetAssosiatedIKSChildOrganizationsAsync(int herId) {
            return base.Channel.GetAssosiatedIKSChildOrganizationsAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.Organization[] GetAssosiatedIKSParentOrganizations(int herId) {
            return base.Channel.GetAssosiatedIKSParentOrganizations(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetAssosiatedIKSParentOrganizationsAsync(int herId) {
            return base.Channel.GetAssosiatedIKSParentOrganizationsAsync(herId);
        }
        
        public void UpdateOrganizationPersonDetails(Helsenorge.Registries.AddressService.OrganizationPersonUpdate p) {
            base.Channel.UpdateOrganizationPersonDetails(p);
        }
        
        public System.Threading.Tasks.Task UpdateOrganizationPersonDetailsAsync(Helsenorge.Registries.AddressService.OrganizationPersonUpdate p) {
            return base.Channel.UpdateOrganizationPersonDetailsAsync(p);
        }
        
        public void UpdateServiceDetails(Helsenorge.Registries.AddressService.ServiceUpdate t) {
            base.Channel.UpdateServiceDetails(t);
        }
        
        public System.Threading.Tasks.Task UpdateServiceDetailsAsync(Helsenorge.Registries.AddressService.ServiceUpdate t) {
            return base.Channel.UpdateServiceDetailsAsync(t);
        }
        
        public void UpdateOrganizationDetails(Helsenorge.Registries.AddressService.OrganizationUpdate org) {
            base.Channel.UpdateOrganizationDetails(org);
        }
        
        public System.Threading.Tasks.Task UpdateOrganizationDetailsAsync(Helsenorge.Registries.AddressService.OrganizationUpdate org) {
            return base.Channel.UpdateOrganizationDetailsAsync(org);
        }
        
        public void UpdateDepartmentDetails(Helsenorge.Registries.AddressService.DepartmentUpdate org) {
            base.Channel.UpdateDepartmentDetails(org);
        }
        
        public System.Threading.Tasks.Task UpdateDepartmentDetailsAsync(Helsenorge.Registries.AddressService.DepartmentUpdate org) {
            return base.Channel.UpdateDepartmentDetailsAsync(org);
        }
        
        public void UpdateOrganizationIKSAssociations(int organizaitonHerId, int[] herIdsForAssociatedIKS) {
            base.Channel.UpdateOrganizationIKSAssociations(organizaitonHerId, herIdsForAssociatedIKS);
        }
        
        public System.Threading.Tasks.Task UpdateOrganizationIKSAssociationsAsync(int organizaitonHerId, int[] herIdsForAssociatedIKS) {
            return base.Channel.UpdateOrganizationIKSAssociationsAsync(organizaitonHerId, herIdsForAssociatedIKS);
        }
        
        public Helsenorge.Registries.AddressService.OrganizationPerson CreateOrganizationPerson(Helsenorge.Registries.AddressService.OrganizationPersonCreate p) {
            return base.Channel.CreateOrganizationPerson(p);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.OrganizationPerson> CreateOrganizationPersonAsync(Helsenorge.Registries.AddressService.OrganizationPersonCreate p) {
            return base.Channel.CreateOrganizationPersonAsync(p);
        }
        
        public Helsenorge.Registries.AddressService.Service CreateService(Helsenorge.Registries.AddressService.ServiceCreate t) {
            return base.Channel.CreateService(t);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Service> CreateServiceAsync(Helsenorge.Registries.AddressService.ServiceCreate t) {
            return base.Channel.CreateServiceAsync(t);
        }
        
        public Helsenorge.Registries.AddressService.Organization CreateOrganization(Helsenorge.Registries.AddressService.OrganizationCreate org) {
            return base.Channel.CreateOrganization(org);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization> CreateOrganizationAsync(Helsenorge.Registries.AddressService.OrganizationCreate org) {
            return base.Channel.CreateOrganizationAsync(org);
        }
        
        public Helsenorge.Registries.AddressService.Department CreateDepartment(Helsenorge.Registries.AddressService.DepartmentCreate org) {
            return base.Channel.CreateDepartment(org);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Department> CreateDepartmentAsync(Helsenorge.Registries.AddressService.DepartmentCreate org) {
            return base.Channel.CreateDepartmentAsync(org);
        }
        
        public Helsenorge.Registries.AddressService.EntityLogEntry[] GetChangeLog(int herId) {
            return base.Channel.GetChangeLog(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.EntityLogEntry[]> GetChangeLogAsync(int herId) {
            return base.Channel.GetChangeLogAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.CommunicationPartyStatistics GetCommunicationPartyStatistics() {
            return base.Channel.GetCommunicationPartyStatistics();
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CommunicationPartyStatistics> GetCommunicationPartyStatisticsAsync() {
            return base.Channel.GetCommunicationPartyStatisticsAsync();
        }
        
        public Helsenorge.Registries.AddressService.OrganizationUpdateStatistics GetOrganizationUpdateStatistics(System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetOrganizationUpdateStatistics(fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.OrganizationUpdateStatistics> GetOrganizationUpdateStatisticsAsync(System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetOrganizationUpdateStatisticsAsync(fromDate, toDate);
        }
        
        public Helsenorge.Registries.AddressService.Organization[] GetOrganizationsOwnedBy(int herId) {
            return base.Channel.GetOrganizationsOwnedBy(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Organization[]> GetOrganizationsOwnedByAsync(int herId) {
            return base.Channel.GetOrganizationsOwnedByAsync(herId);
        }
        
        public void EnableTransportOnOrganization(int herId, string transportType) {
            base.Channel.EnableTransportOnOrganization(herId, transportType);
        }
        
        public System.Threading.Tasks.Task EnableTransportOnOrganizationAsync(int herId, string transportType) {
            return base.Channel.EnableTransportOnOrganizationAsync(herId, transportType);
        }
        
        public void SetCommunicationPartyValid(int herId, Helsenorge.Registries.AddressService.Period period) {
            base.Channel.SetCommunicationPartyValid(herId, period);
        }
        
        public System.Threading.Tasks.Task SetCommunicationPartyValidAsync(int herId, Helsenorge.Registries.AddressService.Period period) {
            return base.Channel.SetCommunicationPartyValidAsync(herId, period);
        }
        
        public byte[] GetCertificateForEncryption(int herId) {
            return base.Channel.GetCertificateForEncryption(herId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateForEncryptionAsync(int herId) {
            return base.Channel.GetCertificateForEncryptionAsync(herId);
        }
        
        public byte[] GetCertificateForValidatingSignature(int herId) {
            return base.Channel.GetCertificateForValidatingSignature(herId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateForValidatingSignatureAsync(int herId) {
            return base.Channel.GetCertificateForValidatingSignatureAsync(herId);
        }
        
        public byte[] GetCertificateForEncryptionByOrganizationNumber(int organizationNumber) {
            return base.Channel.GetCertificateForEncryptionByOrganizationNumber(organizationNumber);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateForEncryptionByOrganizationNumberAsync(int organizationNumber) {
            return base.Channel.GetCertificateForEncryptionByOrganizationNumberAsync(organizationNumber);
        }
        
        public byte[] GetCertificateForValidatingSignatureByOrganizationNumber(int organizationNumber) {
            return base.Channel.GetCertificateForValidatingSignatureByOrganizationNumber(organizationNumber);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateForValidatingSignatureByOrganizationNumberAsync(int organizationNumber) {
            return base.Channel.GetCertificateForValidatingSignatureByOrganizationNumberAsync(organizationNumber);
        }
        
        public byte[] GetCertificate(string ldapUrl) {
            return base.Channel.GetCertificate(ldapUrl);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateAsync(string ldapUrl) {
            return base.Channel.GetCertificateAsync(ldapUrl);
        }
        
        public byte[] GetCertificateForEncryptionLdap(string ldapUrl) {
            return base.Channel.GetCertificateForEncryptionLdap(ldapUrl);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateForEncryptionLdapAsync(string ldapUrl) {
            return base.Channel.GetCertificateForEncryptionLdapAsync(ldapUrl);
        }
        
        public byte[] GetCertificateForValidatingSignatureLdap(string ldapUrl) {
            return base.Channel.GetCertificateForValidatingSignatureLdap(ldapUrl);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCertificateForValidatingSignatureLdapAsync(string ldapUrl) {
            return base.Channel.GetCertificateForValidatingSignatureLdapAsync(ldapUrl);
        }
        
        public Helsenorge.Registries.AddressService.CertificateDetails GetCertificateDetailsForEncryption(int herId) {
            return base.Channel.GetCertificateDetailsForEncryption(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails> GetCertificateDetailsForEncryptionAsync(int herId) {
            return base.Channel.GetCertificateDetailsForEncryptionAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.CertificateDetails GetCertificateDetailsForValidatingSignature(int herId) {
            return base.Channel.GetCertificateDetailsForValidatingSignature(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails> GetCertificateDetailsForValidatingSignatureAsync(int herId) {
            return base.Channel.GetCertificateDetailsForValidatingSignatureAsync(herId);
        }
        
        public Helsenorge.Registries.AddressService.CertificateDetails[] SearchCertificatesForEncryption(string sn, string cn, string ou) {
            return base.Channel.SearchCertificatesForEncryption(sn, cn, ou);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails[]> SearchCertificatesForEncryptionAsync(string sn, string cn, string ou) {
            return base.Channel.SearchCertificatesForEncryptionAsync(sn, cn, ou);
        }
        
        public Helsenorge.Registries.AddressService.CertificateDetails[] SearchCertificatesForValidatingSignature(string sn, string cn, string ou) {
            return base.Channel.SearchCertificatesForValidatingSignature(sn, cn, ou);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateDetails[]> SearchCertificatesForValidatingSignatureAsync(string sn, string cn, string ou) {
            return base.Channel.SearchCertificatesForValidatingSignatureAsync(sn, cn, ou);
        }
        
        public Helsenorge.Registries.AddressService.CertificateSearchResult SearchCertificatesByLdapUrl(string ldapUrl) {
            return base.Channel.SearchCertificatesByLdapUrl(ldapUrl);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.CertificateSearchResult> SearchCertificatesByLdapUrlAsync(string ldapUrl) {
            return base.Channel.SearchCertificatesByLdapUrlAsync(ldapUrl);
        }
        
        public Helsenorge.Registries.AddressService.LdapSearchProvider[] GetLdapSearchProviders() {
            return base.Channel.GetLdapSearchProviders();
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.LdapSearchProvider[]> GetLdapSearchProvidersAsync() {
            return base.Channel.GetLdapSearchProvidersAsync();
        }
        
        public string GetAllHFCommpartiesCsv() {
            return base.Channel.GetAllHFCommpartiesCsv();
        }
        
        public System.Threading.Tasks.Task<string> GetAllHFCommpartiesCsvAsync() {
            return base.Channel.GetAllHFCommpartiesCsvAsync();
        }
        
        public Helsenorge.Registries.AddressService.Code AddCustomAttribute(int herId, Helsenorge.Registries.AddressService.Code code) {
            return base.Channel.AddCustomAttribute(herId, code);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.AddressService.Code> AddCustomAttributeAsync(int herId, Helsenorge.Registries.AddressService.Code code) {
            return base.Channel.AddCustomAttributeAsync(herId, code);
        }
        
        public void RemoveCustomAttribute(int herId, Helsenorge.Registries.AddressService.Code code) {
            base.Channel.RemoveCustomAttribute(herId, code);
        }
        
        public System.Threading.Tasks.Task RemoveCustomAttributeAsync(int herId, Helsenorge.Registries.AddressService.Code code) {
            return base.Channel.RemoveCustomAttributeAsync(herId, code);
        }
        
        public System.Collections.Generic.KeyValuePair<int, Helsenorge.Registries.AddressService.Code[]>[] GetCustomAttributes(int[] herIds) {
            return base.Channel.GetCustomAttributes(herIds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, Helsenorge.Registries.AddressService.Code[]>[]> GetCustomAttributesAsync(int[] herIds) {
            return base.Channel.GetCustomAttributesAsync(herIds);
        }
        
        public void UpdateCoverageAreas(int herId, Helsenorge.Registries.AddressService.CoverageInfo[] coverageAreas) {
            base.Channel.UpdateCoverageAreas(herId, coverageAreas);
        }
        
        public System.Threading.Tasks.Task UpdateCoverageAreasAsync(int herId, Helsenorge.Registries.AddressService.CoverageInfo[] coverageAreas) {
            return base.Channel.UpdateCoverageAreasAsync(herId, coverageAreas);
        }
    }
}
