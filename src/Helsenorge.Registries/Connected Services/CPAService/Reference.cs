//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Helsenorge.Registries.CPAService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollaborationProtocolProfile", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class CollaborationProtocolProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.PartyInfo PartyInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.PartyInfo PartyInfo {
            get {
                return this.PartyInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyInfoField, value) != true)) {
                    this.PartyInfoField = value;
                    this.RaisePropertyChanged("PartyInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartyInfo", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class PartyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Certificate[] CertificatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.DeliveryChannel[] DeliveryChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.CollaborationRole[] CollaborationRolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PartyName {
            get {
                return this.PartyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyNameField, value) != true)) {
                    this.PartyNameField = value;
                    this.RaisePropertyChanged("PartyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        internal Helsenorge.Registries.CPAService.Certificate[] Certificates {
            get {
                return this.CertificatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificatesField, value) != true)) {
                    this.CertificatesField = value;
                    this.RaisePropertyChanged("Certificates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        internal Helsenorge.Registries.CPAService.DeliveryChannel[] DeliveryChannels {
            get {
                return this.DeliveryChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryChannelsField, value) != true)) {
                    this.DeliveryChannelsField = value;
                    this.RaisePropertyChanged("DeliveryChannels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        internal Helsenorge.Registries.CPAService.CollaborationRole[] CollaborationRoles {
            get {
                return this.CollaborationRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.CollaborationRolesField, value) != true)) {
                    this.CollaborationRolesField = value;
                    this.RaisePropertyChanged("CollaborationRoles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Certificate", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class Certificate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Cryptography.X509Certificates.X509Certificate2 X509CertificateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Security.Cryptography.X509Certificates.X509Certificate2 X509Certificate {
            get {
                return this.X509CertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.X509CertificateField, value) != true)) {
                    this.X509CertificateField = value;
                    this.RaisePropertyChanged("X509Certificate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryChannel", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class DeliveryChannel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Code ChannelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.RetrySettings RetrySettingsReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.RetrySettings RetrySettingsSenderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Code ChannelType {
            get {
                return this.ChannelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelTypeField, value) != true)) {
                    this.ChannelTypeField = value;
                    this.RaisePropertyChanged("ChannelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.RetrySettings RetrySettingsReceiver {
            get {
                return this.RetrySettingsReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.RetrySettingsReceiverField, value) != true)) {
                    this.RetrySettingsReceiverField = value;
                    this.RaisePropertyChanged("RetrySettingsReceiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.RetrySettings RetrySettingsSender {
            get {
                return this.RetrySettingsSenderField;
            }
            set {
                if ((object.ReferenceEquals(this.RetrySettingsSenderField, value) != true)) {
                    this.RetrySettingsSenderField = value;
                    this.RaisePropertyChanged("RetrySettingsSender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollaborationRole", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class CollaborationRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Message[] CanReceiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Message[] CanSendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncryptionCertificateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.ProcessSpecification ProcessSpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureCertificateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Message[] CanReceive {
            get {
                return this.CanReceiveField;
            }
            set {
                if ((object.ReferenceEquals(this.CanReceiveField, value) != true)) {
                    this.CanReceiveField = value;
                    this.RaisePropertyChanged("CanReceive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Message[] CanSend {
            get {
                return this.CanSendField;
            }
            set {
                if ((object.ReferenceEquals(this.CanSendField, value) != true)) {
                    this.CanSendField = value;
                    this.RaisePropertyChanged("CanSend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string EncryptionCertificateId {
            get {
                return this.EncryptionCertificateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionCertificateIdField, value) != true)) {
                    this.EncryptionCertificateIdField = value;
                    this.RaisePropertyChanged("EncryptionCertificateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.ProcessSpecification ProcessSpecification {
            get {
                return this.ProcessSpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessSpecificationField, value) != true)) {
                    this.ProcessSpecificationField = value;
                    this.RaisePropertyChanged("ProcessSpecification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SignatureCertificateId {
            get {
                return this.SignatureCertificateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureCertificateIdField, value) != true)) {
                    this.SignatureCertificateIdField = value;
                    this.RaisePropertyChanged("SignatureCertificateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Code", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class Code : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SimpleTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeText {
            get {
                return this.CodeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTextField, value) != true)) {
                    this.CodeTextField = value;
                    this.RaisePropertyChanged("CodeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int OID {
            get {
                return this.OIDField;
            }
            set {
                if ((this.OIDField.Equals(value) != true)) {
                    this.OIDField = value;
                    this.RaisePropertyChanged("OID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SimpleType {
            get {
                return this.SimpleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SimpleTypeField, value) != true)) {
                    this.SimpleTypeField = value;
                    this.RaisePropertyChanged("SimpleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetrySettings", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class RetrySettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocExchangeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersistDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetryIntervalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocExchangeId {
            get {
                return this.DocExchangeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocExchangeIdField, value) != true)) {
                    this.DocExchangeIdField = value;
                    this.RaisePropertyChanged("DocExchangeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PersistDuration {
            get {
                return this.PersistDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.PersistDurationField, value) != true)) {
                    this.PersistDurationField = value;
                    this.RaisePropertyChanged("PersistDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int Retries {
            get {
                return this.RetriesField;
            }
            set {
                if ((this.RetriesField.Equals(value) != true)) {
                    this.RetriesField = value;
                    this.RaisePropertyChanged("Retries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RetryInterval {
            get {
                return this.RetryIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.RetryIntervalField, value) != true)) {
                    this.RetryIntervalField = value;
                    this.RaisePropertyChanged("RetryInterval");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessSpecification", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class ProcessSpecification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.ChannelMessagesCombination[] ChannelMessageCombinationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.ChannelMessagesCombination[] ChannelMessageCombinations {
            get {
                return this.ChannelMessageCombinationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelMessageCombinationsField, value) != true)) {
                    this.ChannelMessageCombinationsField = value;
                    this.RaisePropertyChanged("ChannelMessageCombinations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Uuid {
            get {
                return this.UuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UuidField, value) != true)) {
                    this.UuidField = value;
                    this.RaisePropertyChanged("Uuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DeliveryChannelIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherPartyMessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] DeliveryChannelIds {
            get {
                return this.DeliveryChannelIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryChannelIdsField, value) != true)) {
                    this.DeliveryChannelIdsField = value;
                    this.RaisePropertyChanged("DeliveryChannelIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string OtherPartyMessageId {
            get {
                return this.OtherPartyMessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherPartyMessageIdField, value) != true)) {
                    this.OtherPartyMessageIdField = value;
                    this.RaisePropertyChanged("OtherPartyMessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelMessagesCombination", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class ChannelMessagesCombination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Code ChannelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MessageIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RetrySettingsIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Code ChannelType {
            get {
                return this.ChannelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelTypeField, value) != true)) {
                    this.ChannelTypeField = value;
                    this.RaisePropertyChanged("ChannelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] MessageIds {
            get {
                return this.MessageIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdsField, value) != true)) {
                    this.MessageIdsField = value;
                    this.RaisePropertyChanged("MessageIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid RetrySettingsId {
            get {
                return this.RetrySettingsIdField;
            }
            set {
                if ((this.RetrySettingsIdField.Equals(value) != true)) {
                    this.RetrySettingsIdField = value;
                    this.RaisePropertyChanged("RetrySettingsId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericFault", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    internal partial class GenericFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollaborationProtocolProfileParameters", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.CPPA.D" +
        "ata")]
    [System.SerializableAttribute()]
    internal partial class CollaborationProtocolProfileParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Process[] ProcessesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Process[] Processes {
            get {
                return this.ProcessesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessesField, value) != true)) {
                    this.ProcessesField = value;
                    this.RaisePropertyChanged("Processes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Process", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.CPPA.D" +
        "ata")]
    [System.SerializableAttribute()]
    internal partial class Process : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Channel[] ChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Role[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Channel[] Channels {
            get {
                return this.ChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelsField, value) != true)) {
                    this.ChannelsField = value;
                    this.RaisePropertyChanged("Channels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Channel", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.CPPA.D" +
        "ata")]
    [System.SerializableAttribute()]
    internal partial class Channel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.CPPA.D" +
        "ata")]
    [System.SerializableAttribute()]
    internal partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CpaDetails", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class CpaDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.CollaborationProtocolAgreement CollaborationProtocolAgreementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Code StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.CollaborationProtocolAgreement CollaborationProtocolAgreement {
            get {
                return this.CollaborationProtocolAgreementField;
            }
            set {
                if ((object.ReferenceEquals(this.CollaborationProtocolAgreementField, value) != true)) {
                    this.CollaborationProtocolAgreementField = value;
                    this.RaisePropertyChanged("CollaborationProtocolAgreement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Code Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollaborationProtocolAgreement", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class CollaborationProtocolAgreement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApprovedByPartyAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApprovedByPartyBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.PartyInfo PartyAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.PartyInfo PartyBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RevokedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool ApprovedByPartyA {
            get {
                return this.ApprovedByPartyAField;
            }
            set {
                if ((this.ApprovedByPartyAField.Equals(value) != true)) {
                    this.ApprovedByPartyAField = value;
                    this.RaisePropertyChanged("ApprovedByPartyA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool ApprovedByPartyB {
            get {
                return this.ApprovedByPartyBField;
            }
            set {
                if ((this.ApprovedByPartyBField.Equals(value) != true)) {
                    this.ApprovedByPartyBField = value;
                    this.RaisePropertyChanged("ApprovedByPartyB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.PartyInfo PartyA {
            get {
                return this.PartyAField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyAField, value) != true)) {
                    this.PartyAField = value;
                    this.RaisePropertyChanged("PartyA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.PartyInfo PartyB {
            get {
                return this.PartyBField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyBField, value) != true)) {
                    this.PartyBField = value;
                    this.RaisePropertyChanged("PartyB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> Revoked {
            get {
                return this.RevokedField;
            }
            set {
                if ((this.RevokedField.Equals(value) != true)) {
                    this.RevokedField = value;
                    this.RaisePropertyChanged("Revoked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CpaXmlDetails", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class CpaXmlDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollaborationProtocolAgreementXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Code StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CollaborationProtocolAgreementXml {
            get {
                return this.CollaborationProtocolAgreementXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CollaborationProtocolAgreementXmlField, value) != true)) {
                    this.CollaborationProtocolAgreementXmlField = value;
                    this.RaisePropertyChanged("CollaborationProtocolAgreementXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Code Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollaborationRoleIdentifier", Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile")]
    [System.SerializableAttribute()]
    internal partial class CollaborationRoleIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessSpecificationUuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessSpecificationVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ProcessSpecificationUuid {
            get {
                return this.ProcessSpecificationUuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessSpecificationUuidField, value) != true)) {
                    this.ProcessSpecificationUuidField = value;
                    this.RaisePropertyChanged("ProcessSpecificationUuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ProcessSpecificationVersion {
            get {
                return this.ProcessSpecificationVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessSpecificationVersionField, value) != true)) {
                    this.ProcessSpecificationVersionField = value;
                    this.RaisePropertyChanged("ProcessSpecificationVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessParameter", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.CPPA.D" +
        "ata")]
    [System.SerializableAttribute()]
    internal partial class ProcessParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.ProcessWithGuid ProcessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int HerId {
            get {
                return this.HerIdField;
            }
            set {
                if ((this.HerIdField.Equals(value) != true)) {
                    this.HerIdField = value;
                    this.RaisePropertyChanged("HerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.ProcessWithGuid Process {
            get {
                return this.ProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessField, value) != true)) {
                    this.ProcessField = value;
                    this.RaisePropertyChanged("Process");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessWithGuid", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.CPPA.D" +
        "ata")]
    [System.SerializableAttribute()]
    internal partial class ProcessWithGuid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Channel[] ChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Helsenorge.Registries.CPAService.Role[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Channel[] Channels {
            get {
                return this.ChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelsField, value) != true)) {
                    this.ChannelsField = value;
                    this.RaisePropertyChanged("Channels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Helsenorge.Registries.CPAService.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNumberField, value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.nhn.no/reg/CollaborationProtocolProfile", ConfigurationName="CPAService.ICPPAService")]
    internal interface ICPPAService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppGeneric" +
            "FaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile GetCpp(System.Guid cppId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppRespons" +
            "e")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> GetCppAsync(System.Guid cppId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppForComm" +
            "unicationParty", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppForComm" +
            "unicationPartyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppForComm" +
            "unicationPartyGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile GetCppForCommunicationParty(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppForComm" +
            "unicationParty", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppForComm" +
            "unicationPartyResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> GetCppForCommunicationPartyAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppGene" +
            "ricFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile CreateCpp(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppResp" +
            "onse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> CreateCppAsync(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppForP" +
            "rocesses", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppForP" +
            "rocessesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppForP" +
            "rocessesGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile CreateCppForProcesses(Helsenorge.Registries.CPAService.CollaborationProtocolProfileParameters cppp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppForP" +
            "rocesses", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppForP" +
            "rocessesResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> CreateCppForProcessesAsync(Helsenorge.Registries.CPAService.CollaborationProtocolProfileParameters cppp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppXmlR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppXmlG" +
            "enericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile CreateCppXml(string cppXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppXmlR" +
            "esponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> CreateCppXmlAsync(string cppXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlForC" +
            "ommunicationParty", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlForC" +
            "ommunicationPartyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlForC" +
            "ommunicationPartyGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        string GetCppXmlForCommunicationParty(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlForC" +
            "ommunicationParty", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlForC" +
            "ommunicationPartyResponse")]
        System.Threading.Tasks.Task<string> GetCppXmlForCommunicationPartyAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlGene" +
            "ricFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        string GetCppXml(System.Guid cppId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppXmlResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetCppXmlAsync(System.Guid cppId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetAllCollabo" +
            "rationRoles", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetAllCollabo" +
            "rationRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetAllCollabo" +
            "rationRolesGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationRole[] GetAllCollaborationRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetAllCollabo" +
            "rationRoles", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetAllCollabo" +
            "rationRolesResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationRole[]> GetAllCollaborationRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "e", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile GetCppTemplate(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "e", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> GetCppTemplateAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eXmlGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        string GetCppTemplateXml(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "eXmlResponse")]
        System.Threading.Tasks.Task<string> GetCppTemplateXmlAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/DeleteCppTemp" +
            "late", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/DeleteCppTemp" +
            "lateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/DeleteCppTemp" +
            "lateGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        void DeleteCppTemplate(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/DeleteCppTemp" +
            "late", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/DeleteCppTemp" +
            "lateResponse")]
        System.Threading.Tasks.Task DeleteCppTemplateAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "es", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "esResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "esGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CollaborationProtocolProfile[] GetCppTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "es", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCppTemplat" +
            "esResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile[]> GetCppTemplatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppTemp" +
            "late", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppTemp" +
            "lateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppTemp" +
            "lateGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        string CreateCppTemplate(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppTemp" +
            "late", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/CreateCppTemp" +
            "lateResponse")]
        System.Threading.Tasks.Task<string> CreateCppTemplateAsync(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaGeneric" +
            "FaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails GetCpa(System.Guid cpaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaRespons" +
            "e")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> GetCpaAsync(System.Guid cpaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaXmlResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaXmlGene" +
            "ricFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaXmlDetails GetCpaXml(System.Guid cpaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaXmlResp" +
            "onse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaXmlDetails> GetCpaXmlAsync(System.Guid cpaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationParties", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails GetCpaForCommunicationParties(int communicationPartAHerId, int communicationPartBHerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationParties", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> GetCpaForCommunicationPartiesAsync(int communicationPartAHerId, int communicationPartBHerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesXmlGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaXmlDetails GetCpaForCommunicationPartiesXml(int communicationPartAHerId, int communicationPartBHerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpaForComm" +
            "unicationPartiesXmlResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaXmlDetails> GetCpaForCommunicationPartiesXmlAsync(int communicationPartAHerId, int communicationPartBHerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationParty", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationParty(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationParty", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyCreatedAfter", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyCreatedAfterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyCreatedAfterGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationPartyCreatedAfter(int herId, System.DateTime createdOnOrAfter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyCreatedAfter", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyCreatedAfterResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyCreatedAfterAsync(int herId, System.DateTime createdOnOrAfter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApproval", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationPartyForApproval(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApproval", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyForApprovalAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalUnfiltered", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalUnfilteredResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalUnfilteredGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationPartyForApprovalUnfiltered(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalUnfiltered", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyForApprovalUnfilteredResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyForApprovalUnfilteredAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyXmlGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaXmlDetails[] GetCpasForCommunicationPartyXml(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyXml", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetCpasForCom" +
            "municationPartyXmlResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaXmlDetails[]> GetCpasForCommunicationPartyXmlAsync(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetRevocatedC" +
            "pas", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetRevocatedC" +
            "pasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetRevocatedC" +
            "pasGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        System.Guid[] GetRevocatedCpas(int herId, System.DateTime fromDate, System.Nullable<System.DateTime> toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetRevocatedC" +
            "pas", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetRevocatedC" +
            "pasResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetRevocatedCpasAsync(int herId, System.DateTime fromDate, System.Nullable<System.DateTime> toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RevokeCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RevokeCpaResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RevokeCpaGene" +
            "ricFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails RevokeCpa(System.Guid cpaId, int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RevokeCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RevokeCpaResp" +
            "onse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> RevokeCpaAsync(System.Guid cpaId, int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveCpaRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveCpaGen" +
            "ericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails ApproveCpa(System.Guid cpaId, int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveCpaRes" +
            "ponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> ApproveCpaAsync(System.Guid cpaId, int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveAndUpd" +
            "ateCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveAndUpd" +
            "ateCpaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveAndUpd" +
            "ateCpaGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.CpaDetails ApproveAndUpdateCpa(System.Guid cpaId, int herId, Helsenorge.Registries.CPAService.CollaborationRoleIdentifier[] approvedRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveAndUpd" +
            "ateCpa", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/ApproveAndUpd" +
            "ateCpaResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> ApproveAndUpdateCpaAsync(System.Guid cpaId, int herId, Helsenorge.Registries.CPAService.CollaborationRoleIdentifier[] approvedRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/AddProcessToC" +
            "pp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/AddProcessToC" +
            "ppResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/AddProcessToC" +
            "ppGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        void AddProcessToCpp(Helsenorge.Registries.CPAService.ProcessParameter processParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/AddProcessToC" +
            "pp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/AddProcessToC" +
            "ppResponse")]
        System.Threading.Tasks.Task AddProcessToCppAsync(Helsenorge.Registries.CPAService.ProcessParameter processParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RemoveProcess" +
            "FromCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RemoveProcess" +
            "FromCppResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RemoveProcess" +
            "FromCppGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        void RemoveProcessFromCpp(Helsenorge.Registries.CPAService.ProcessParameter processParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RemoveProcess" +
            "FromCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/RemoveProcess" +
            "FromCppResponse")]
        System.Threading.Tasks.Task RemoveProcessFromCppAsync(Helsenorge.Registries.CPAService.ProcessParameter processParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetProcessesI" +
            "nCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetProcessesI" +
            "nCppResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Helsenorge.Registries.CPAService.GenericFault), Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetProcessesI" +
            "nCppGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        Helsenorge.Registries.CPAService.ProcessParameter[] GetProcessesInCpp(int herId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetProcessesI" +
            "nCpp", ReplyAction="http://schemas.nhn.no/reg/CollaborationProtocolProfile/ICPPAService/GetProcessesI" +
            "nCppResponse")]
        System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.ProcessParameter[]> GetProcessesInCppAsync(int herId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICPPAServiceChannel : Helsenorge.Registries.CPAService.ICPPAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class CPPAServiceClient : System.ServiceModel.ClientBase<Helsenorge.Registries.CPAService.ICPPAService>, Helsenorge.Registries.CPAService.ICPPAService {
        
        public CPPAServiceClient() {
        }
        
        public CPPAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CPPAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CPPAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CPPAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile GetCpp(System.Guid cppId) {
            return base.Channel.GetCpp(cppId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> GetCppAsync(System.Guid cppId) {
            return base.Channel.GetCppAsync(cppId);
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile GetCppForCommunicationParty(int herId) {
            return base.Channel.GetCppForCommunicationParty(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> GetCppForCommunicationPartyAsync(int herId) {
            return base.Channel.GetCppForCommunicationPartyAsync(herId);
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile CreateCpp(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp) {
            return base.Channel.CreateCpp(cpp);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> CreateCppAsync(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp) {
            return base.Channel.CreateCppAsync(cpp);
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile CreateCppForProcesses(Helsenorge.Registries.CPAService.CollaborationProtocolProfileParameters cppp) {
            return base.Channel.CreateCppForProcesses(cppp);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> CreateCppForProcessesAsync(Helsenorge.Registries.CPAService.CollaborationProtocolProfileParameters cppp) {
            return base.Channel.CreateCppForProcessesAsync(cppp);
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile CreateCppXml(string cppXml) {
            return base.Channel.CreateCppXml(cppXml);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> CreateCppXmlAsync(string cppXml) {
            return base.Channel.CreateCppXmlAsync(cppXml);
        }
        
        public string GetCppXmlForCommunicationParty(int herId) {
            return base.Channel.GetCppXmlForCommunicationParty(herId);
        }
        
        public System.Threading.Tasks.Task<string> GetCppXmlForCommunicationPartyAsync(int herId) {
            return base.Channel.GetCppXmlForCommunicationPartyAsync(herId);
        }
        
        public string GetCppXml(System.Guid cppId) {
            return base.Channel.GetCppXml(cppId);
        }
        
        public System.Threading.Tasks.Task<string> GetCppXmlAsync(System.Guid cppId) {
            return base.Channel.GetCppXmlAsync(cppId);
        }
        
        public Helsenorge.Registries.CPAService.CollaborationRole[] GetAllCollaborationRoles() {
            return base.Channel.GetAllCollaborationRoles();
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationRole[]> GetAllCollaborationRolesAsync() {
            return base.Channel.GetAllCollaborationRolesAsync();
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile GetCppTemplate(string name) {
            return base.Channel.GetCppTemplate(name);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile> GetCppTemplateAsync(string name) {
            return base.Channel.GetCppTemplateAsync(name);
        }
        
        public string GetCppTemplateXml(string name) {
            return base.Channel.GetCppTemplateXml(name);
        }
        
        public System.Threading.Tasks.Task<string> GetCppTemplateXmlAsync(string name) {
            return base.Channel.GetCppTemplateXmlAsync(name);
        }
        
        public void DeleteCppTemplate(string name) {
            base.Channel.DeleteCppTemplate(name);
        }
        
        public System.Threading.Tasks.Task DeleteCppTemplateAsync(string name) {
            return base.Channel.DeleteCppTemplateAsync(name);
        }
        
        public Helsenorge.Registries.CPAService.CollaborationProtocolProfile[] GetCppTemplates() {
            return base.Channel.GetCppTemplates();
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CollaborationProtocolProfile[]> GetCppTemplatesAsync() {
            return base.Channel.GetCppTemplatesAsync();
        }
        
        public string CreateCppTemplate(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp) {
            return base.Channel.CreateCppTemplate(cpp);
        }
        
        public System.Threading.Tasks.Task<string> CreateCppTemplateAsync(Helsenorge.Registries.CPAService.CollaborationProtocolProfile cpp) {
            return base.Channel.CreateCppTemplateAsync(cpp);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails GetCpa(System.Guid cpaId) {
            return base.Channel.GetCpa(cpaId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> GetCpaAsync(System.Guid cpaId) {
            return base.Channel.GetCpaAsync(cpaId);
        }
        
        public Helsenorge.Registries.CPAService.CpaXmlDetails GetCpaXml(System.Guid cpaId) {
            return base.Channel.GetCpaXml(cpaId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaXmlDetails> GetCpaXmlAsync(System.Guid cpaId) {
            return base.Channel.GetCpaXmlAsync(cpaId);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails GetCpaForCommunicationParties(int communicationPartAHerId, int communicationPartBHerId) {
            return base.Channel.GetCpaForCommunicationParties(communicationPartAHerId, communicationPartBHerId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> GetCpaForCommunicationPartiesAsync(int communicationPartAHerId, int communicationPartBHerId) {
            return base.Channel.GetCpaForCommunicationPartiesAsync(communicationPartAHerId, communicationPartBHerId);
        }
        
        public Helsenorge.Registries.CPAService.CpaXmlDetails GetCpaForCommunicationPartiesXml(int communicationPartAHerId, int communicationPartBHerId) {
            return base.Channel.GetCpaForCommunicationPartiesXml(communicationPartAHerId, communicationPartBHerId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaXmlDetails> GetCpaForCommunicationPartiesXmlAsync(int communicationPartAHerId, int communicationPartBHerId) {
            return base.Channel.GetCpaForCommunicationPartiesXmlAsync(communicationPartAHerId, communicationPartBHerId);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationParty(int herId) {
            return base.Channel.GetCpasForCommunicationParty(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyAsync(int herId) {
            return base.Channel.GetCpasForCommunicationPartyAsync(herId);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationPartyCreatedAfter(int herId, System.DateTime createdOnOrAfter) {
            return base.Channel.GetCpasForCommunicationPartyCreatedAfter(herId, createdOnOrAfter);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyCreatedAfterAsync(int herId, System.DateTime createdOnOrAfter) {
            return base.Channel.GetCpasForCommunicationPartyCreatedAfterAsync(herId, createdOnOrAfter);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationPartyForApproval(int herId) {
            return base.Channel.GetCpasForCommunicationPartyForApproval(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyForApprovalAsync(int herId) {
            return base.Channel.GetCpasForCommunicationPartyForApprovalAsync(herId);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails[] GetCpasForCommunicationPartyForApprovalUnfiltered(int herId) {
            return base.Channel.GetCpasForCommunicationPartyForApprovalUnfiltered(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails[]> GetCpasForCommunicationPartyForApprovalUnfilteredAsync(int herId) {
            return base.Channel.GetCpasForCommunicationPartyForApprovalUnfilteredAsync(herId);
        }
        
        public Helsenorge.Registries.CPAService.CpaXmlDetails[] GetCpasForCommunicationPartyXml(int herId) {
            return base.Channel.GetCpasForCommunicationPartyXml(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaXmlDetails[]> GetCpasForCommunicationPartyXmlAsync(int herId) {
            return base.Channel.GetCpasForCommunicationPartyXmlAsync(herId);
        }
        
        public System.Guid[] GetRevocatedCpas(int herId, System.DateTime fromDate, System.Nullable<System.DateTime> toDate) {
            return base.Channel.GetRevocatedCpas(herId, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetRevocatedCpasAsync(int herId, System.DateTime fromDate, System.Nullable<System.DateTime> toDate) {
            return base.Channel.GetRevocatedCpasAsync(herId, fromDate, toDate);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails RevokeCpa(System.Guid cpaId, int herId) {
            return base.Channel.RevokeCpa(cpaId, herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> RevokeCpaAsync(System.Guid cpaId, int herId) {
            return base.Channel.RevokeCpaAsync(cpaId, herId);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails ApproveCpa(System.Guid cpaId, int herId) {
            return base.Channel.ApproveCpa(cpaId, herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> ApproveCpaAsync(System.Guid cpaId, int herId) {
            return base.Channel.ApproveCpaAsync(cpaId, herId);
        }
        
        public Helsenorge.Registries.CPAService.CpaDetails ApproveAndUpdateCpa(System.Guid cpaId, int herId, Helsenorge.Registries.CPAService.CollaborationRoleIdentifier[] approvedRoles) {
            return base.Channel.ApproveAndUpdateCpa(cpaId, herId, approvedRoles);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.CpaDetails> ApproveAndUpdateCpaAsync(System.Guid cpaId, int herId, Helsenorge.Registries.CPAService.CollaborationRoleIdentifier[] approvedRoles) {
            return base.Channel.ApproveAndUpdateCpaAsync(cpaId, herId, approvedRoles);
        }
        
        public void AddProcessToCpp(Helsenorge.Registries.CPAService.ProcessParameter processParameter) {
            base.Channel.AddProcessToCpp(processParameter);
        }
        
        public System.Threading.Tasks.Task AddProcessToCppAsync(Helsenorge.Registries.CPAService.ProcessParameter processParameter) {
            return base.Channel.AddProcessToCppAsync(processParameter);
        }
        
        public void RemoveProcessFromCpp(Helsenorge.Registries.CPAService.ProcessParameter processParameter) {
            base.Channel.RemoveProcessFromCpp(processParameter);
        }
        
        public System.Threading.Tasks.Task RemoveProcessFromCppAsync(Helsenorge.Registries.CPAService.ProcessParameter processParameter) {
            return base.Channel.RemoveProcessFromCppAsync(processParameter);
        }
        
        public Helsenorge.Registries.CPAService.ProcessParameter[] GetProcessesInCpp(int herId) {
            return base.Channel.GetProcessesInCpp(herId);
        }
        
        public System.Threading.Tasks.Task<Helsenorge.Registries.CPAService.ProcessParameter[]> GetProcessesInCppAsync(int herId) {
            return base.Channel.GetProcessesInCppAsync(herId);
        }
    }
}
